{"name": "Checking receipt of post by ID", "status": "failed", "statusDetails": {"message": "AssertionError: Expect 200, actual: 404\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <tests.test_posts.TestPosts object at 0x7ffab3d30180>\nposts_client = <api_client.clients.posts_client.PostsClient object at 0x7ffab3d616a0>\ncreated_post = 101\n\n    @allure.story(\"GET /posts/{id} - Get by ID\")\n    @allure.title(\"Checking receipt of post by ID\")\n    def test_get_post_by_id(self, posts_client, created_post: int):\n        post_id = created_post  # ID from fixture (id=101)\n    \n        with allure.step(f\"GET request for id: {post_id}\"):\n            response = posts_client.get_post_by_id(post_id)\n    \n        with allure.step(\"Check HTTP status code\"):\n>           assert response.status_code == 200, f\"Expect 200, actual: {response.status_code}\"\nE           AssertionError: Expect 200, actual: 404\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\ntests/test_posts.py:71: AssertionError"}, "steps": [{"name": "GET request for id: 101", "status": "passed", "start": 1761061322760, "stop": 1761061322815}, {"name": "Check HTTP status code", "status": "failed", "statusDetails": {"message": "AssertionError: Expect 200, actual: 404\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code\n", "trace": "  File \"/home/runner/work/test_JSONPlaceholder/test_JSONPlaceholder/tests/test_posts.py\", line 71, in test_get_post_by_id\n    assert response.status_code == 200, f\"Expect 200, actual: {response.status_code}\"\n"}, "start": 1761061322815, "stop": 1761061322816}], "attachments": [{"name": "log", "source": "7738aa64-158d-4ae3-9e42-f44603f044ac-attachment.txt", "type": "text/plain"}], "start": 1761061322759, "stop": 1761061322816, "uuid": "d54fa4a5-d7ab-42f9-a484-818fedd5d33c", "historyId": "85ad6e2466ffc620d99875a8796c4501", "testCaseId": "85ad6e2466ffc620d99875a8796c4501", "fullName": "tests.test_posts.TestPosts#test_get_post_by_id", "labels": [{"name": "epic", "value": "API regression testing"}, {"name": "feature", "value": "Posts CRUD operations"}, {"name": "story", "value": "GET /posts/{id} - Get by ID"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_posts"}, {"name": "subSuite", "value": "TestPosts"}, {"name": "host", "value": "runnervmwhb2z"}, {"name": "thread", "value": "2274-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_posts"}], "titlePath": ["tests", "test_posts.py", "TestPosts"]}