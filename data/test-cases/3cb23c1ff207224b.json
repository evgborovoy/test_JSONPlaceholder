{"uid":"3cb23c1ff207224b","name":"Checking for a full post update","fullName":"tests.test_posts.TestPosts#test_update_post","historyId":"0e010afb3caeb309101b68bb87713b8f","time":{"start":1761061323002,"stop":1761061323077,"duration":75},"status":"failed","statusMessage":"AssertionError: Expect 200, actual 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <tests.test_posts.TestPosts object at 0x7ffab3d308a0>\nposts_client = <api_client.clients.posts_client.PostsClient object at 0x7ffab3d616a0>\ncreated_post = 101\n\n    @allure.story(\"PUT /posts/{id} - Update Resource\")\n    @allure.title(\"Checking for a full post update\")\n    def test_update_post(self, posts_client, created_post: int):\n        post_id = created_post\n        new_title = f\"UPDATED Title {datetime.now().strftime('%H%M%S%f')}\"\n    \n        with allure.step(f\"Send PUT request for ID: {post_id}\"):\n            response = posts_client.update_post(post_id, new_title, \"Updated Body\", user_id=1)\n    \n        with allure.step(\"Checking HTTP status code\"):\n>           assert response.status_code == 200, f\"Expect 200, actual {response.status_code}\"\nE           AssertionError: Expect 200, actual 500\nE           assert 500 == 200\nE            +  where 500 = <Response [500]>.status_code\n\ntests/test_posts.py:89: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api_client","time":{"start":1761061322515,"stop":1761061322515,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1761061322515,"stop":1761061322515,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"posts_client","time":{"start":1761061322515,"stop":1761061322515,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"created_post","time":{"start":1761061322922,"stop":1761061323002,"duration":80},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expect 200, actual 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <tests.test_posts.TestPosts object at 0x7ffab3d308a0>\nposts_client = <api_client.clients.posts_client.PostsClient object at 0x7ffab3d616a0>\ncreated_post = 101\n\n    @allure.story(\"PUT /posts/{id} - Update Resource\")\n    @allure.title(\"Checking for a full post update\")\n    def test_update_post(self, posts_client, created_post: int):\n        post_id = created_post\n        new_title = f\"UPDATED Title {datetime.now().strftime('%H%M%S%f')}\"\n    \n        with allure.step(f\"Send PUT request for ID: {post_id}\"):\n            response = posts_client.update_post(post_id, new_title, \"Updated Body\", user_id=1)\n    \n        with allure.step(\"Checking HTTP status code\"):\n>           assert response.status_code == 200, f\"Expect 200, actual {response.status_code}\"\nE           AssertionError: Expect 200, actual 500\nE           assert 500 == 200\nE            +  where 500 = <Response [500]>.status_code\n\ntests/test_posts.py:89: AssertionError","steps":[{"name":"Send PUT request for ID: 101","time":{"start":1761061323003,"stop":1761061323076,"duration":73},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Checking HTTP status code","time":{"start":1761061323076,"stop":1761061323076,"duration":0},"status":"failed","statusMessage":"AssertionError: Expect 200, actual 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n","statusTrace":"  File \"/home/runner/work/test_JSONPlaceholder/test_JSONPlaceholder/tests/test_posts.py\", line 89, in test_update_post\n    assert response.status_code == 200, f\"Expect 200, actual {response.status_code}\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"cb4c83728bbf6a35","name":"log","source":"cb4c83728bbf6a35.txt","type":"text/plain","size":969}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"created_post::0","time":{"start":1761061323083,"stop":1761061323155,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Posts CRUD operations"},{"name":"story","value":"PUT /posts/{id} - Update Resource"},{"name":"epic","value":"API regression testing"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_posts"},{"name":"subSuite","value":"TestPosts"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2274-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_posts"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"3cb23c1ff207224b.json","parameterValues":[]}