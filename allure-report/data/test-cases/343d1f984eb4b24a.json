{"uid":"343d1f984eb4b24a","name":"Checking receipt of post by ID","fullName":"tests.test_posts.TestPosts#test_get_post_by_id","historyId":"85ad6e2466ffc620d99875a8796c4501","time":{"start":1761061322759,"stop":1761061322816,"duration":57},"status":"failed","statusMessage":"AssertionError: Expect 200, actual: 404\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <tests.test_posts.TestPosts object at 0x7ffab3d30180>\nposts_client = <api_client.clients.posts_client.PostsClient object at 0x7ffab3d616a0>\ncreated_post = 101\n\n    @allure.story(\"GET /posts/{id} - Get by ID\")\n    @allure.title(\"Checking receipt of post by ID\")\n    def test_get_post_by_id(self, posts_client, created_post: int):\n        post_id = created_post  # ID from fixture (id=101)\n    \n        with allure.step(f\"GET request for id: {post_id}\"):\n            response = posts_client.get_post_by_id(post_id)\n    \n        with allure.step(\"Check HTTP status code\"):\n>           assert response.status_code == 200, f\"Expect 200, actual: {response.status_code}\"\nE           AssertionError: Expect 200, actual: 404\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\ntests/test_posts.py:71: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api_client","time":{"start":1761061322515,"stop":1761061322515,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1761061322515,"stop":1761061322515,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"posts_client","time":{"start":1761061322515,"stop":1761061322515,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"created_post","time":{"start":1761061322703,"stop":1761061322759,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expect 200, actual: 404\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <tests.test_posts.TestPosts object at 0x7ffab3d30180>\nposts_client = <api_client.clients.posts_client.PostsClient object at 0x7ffab3d616a0>\ncreated_post = 101\n\n    @allure.story(\"GET /posts/{id} - Get by ID\")\n    @allure.title(\"Checking receipt of post by ID\")\n    def test_get_post_by_id(self, posts_client, created_post: int):\n        post_id = created_post  # ID from fixture (id=101)\n    \n        with allure.step(f\"GET request for id: {post_id}\"):\n            response = posts_client.get_post_by_id(post_id)\n    \n        with allure.step(\"Check HTTP status code\"):\n>           assert response.status_code == 200, f\"Expect 200, actual: {response.status_code}\"\nE           AssertionError: Expect 200, actual: 404\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\ntests/test_posts.py:71: AssertionError","steps":[{"name":"GET request for id: 101","time":{"start":1761061322760,"stop":1761061322815,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check HTTP status code","time":{"start":1761061322815,"stop":1761061322816,"duration":1},"status":"failed","statusMessage":"AssertionError: Expect 200, actual: 404\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code\n","statusTrace":"  File \"/home/runner/work/test_JSONPlaceholder/test_JSONPlaceholder/tests/test_posts.py\", line 71, in test_get_post_by_id\n    assert response.status_code == 200, f\"Expect 200, actual: {response.status_code}\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"3372cfbc86bcc6a0","name":"log","source":"3372cfbc86bcc6a0.txt","type":"text/plain","size":969}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"created_post::0","time":{"start":1761061322841,"stop":1761061322920,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"API regression testing"},{"name":"feature","value":"Posts CRUD operations"},{"name":"story","value":"GET /posts/{id} - Get by ID"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_posts"},{"name":"subSuite","value":"TestPosts"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2274-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_posts"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"343d1f984eb4b24a.json","parameterValues":[]}