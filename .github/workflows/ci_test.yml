name: Playwright Python Tests

on:
  push:
    branches: [ 'main', 'master', 'dev' ]
  pull_request:
    branches: [ 'main', 'master', 'dev' ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest

      - name: Install Allure commandline
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.25.0/allure-2.25.0.zip
          unzip allure-2.25.0.zip -d $HOME/allure
          export PATH=$HOME/allure/allure-2.25.0/bin:$PATH
          echo "$HOME/allure/allure-2.25.0/bin" >> $GITHUB_PATH
          allure --version

      - name: Run tests
        continue-on-error: true
        run: pytest --alluredir=allure-results

      - name: Check allure-results
        run: ls -la allure-results

      - name: Generate Allure report
        run: allure generate allure-results -o allure-report --clean

      - name: Publish Allure report to gh-pages
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git fetch origin gh-pages || true
          git checkout gh-pages || git checkout --orphan gh-pages

          git rm -rf . || true

          cp -r allure-report/* .

          git add .
          git commit -m "Update Allure report [skip ci]" || echo "No changes to commit"
          git push origin gh-pages --force

      - name: Upload Allure report as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
          retention-days: 10

      - name: Print Allure report link
        if: always()
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          echo "‚úÖ Allure report published!"
          echo "üåê Online report: https://${{ github.repository_owner }}.github.io/${REPO_NAME}/"
          echo "üì¶ Downloadable report available in Artifacts tab (as allure-report.zip)"
